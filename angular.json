{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "loyalty-v3": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss",
          "changeDetection": "OnPush",
          "skipImport": true,
          "standalone": true
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "outputPath": "dist/loyalty-v3",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": "src/polyfills/index.ts",
            "tsConfig": "src/tsconfig.app.json",
            "aot": true,
            "inlineStyleLanguage": "scss",
            "assets": [
              "src/ngsw-worker.js",
              "src/assets/commons.svg",
              "src/assets",
              "src/favicon.ico",
              {
                "glob": "**/*",
                "input": "node_modules/@taiga-ui/icons/src",
                "output": "assets/taiga-ui/icons"
              }
            ],
            "styles": [
              {
                "input": "src/styles/taiga-base.less"
              },
              { "input": "./node_modules/leaflet/dist/leaflet.css" }
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["node_modules"]
            },
            "scripts": [],
            "customWebpackConfig": {
              "path": "src/webpack.config.js"
            },
            "allowedCommonJsDependencies": [
              "deepmerge",
              "event-source-polyfill",
              "deep-equal",
              "element-resize-detector",
              "leaflet",
              "dayjs",
              "atob",
              "qs",
              "fast-deep-equal",
              "adler-32",
              "@bugsnag/browser",
              "algoliasearch",
              "clone-deep",
              "chartjs-plugin-annotation",
              "dompurify",
              "chart.js",
              "text-mask-core"
            ],
            "optimization": true,
            "outputHashing": "all",
            "namedChunks": false,
            "extractLicenses": true,
            "vendorChunk": true,
            "buildOptimizer": true,
            "sourceMap": true,
            "budgets": [
              {
                "type": "bundle",
                "name": "polyfills",
                "baseline": "150kb",
                "maximumWarning": "50kb",
                "maximumError": "100kb"
              },
              {
                "type": "bundle",
                "name": "styles",
                "baseline": "280kb",
                "maximumWarning": "50kb",
                "maximumError": "150kb"
              },
              {
                "type": "bundle",
                "name": "main",
                "baseline": "1024kb",
                "maximumWarning": "100kb",
                "maximumError": "200kb"
              },
              {
                "type": "anyComponentStyle",
                "maximumError": "6kb"
              }
            ]
          },
          "configurations": {
            "dev": {
              "budgets": [],
              "optimization": false,
              "buildOptimizer": false,
              "extractLicenses": false,
              "namedChunks": true,
              "outputHashing": "none",
              "fileReplacements": [
                {
                  "replace": "src/environments/build-config.ts",
                  "with": "src/environments/build-config.dev.ts"
                }
              ]
            },
            "staging": {
              "budgets": [],
              "optimization": false,
              "buildOptimizer": false,
              "extractLicenses": false,
              "namedChunks": true,
              "outputHashing": "none",
              "fileReplacements": [
                {
                  "replace": "src/environments/build-config.ts",
                  "with": "src/environments/build-config.staging.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-builders/custom-webpack:dev-server",
          "options": {
            "browserTarget": "loyalty-v3:build",
            "hmr": true
          },
          "configurations": {
            "dev": {
              "browserTarget": "loyalty-v3:build:dev"
            },
            "staging": {
              "browserTarget": "loyalty-v3:build:staging"
            }
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "options": {
            "browserTarget": "loyalty-v3:build:staging",
            "compodoc": false,
            "port": 6006
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "options": {
            "browserTarget": "loyalty-v3:build:staging",
            "compodoc": false,
            "outputDir": "storybook-report"
          }
        }
      }
    }
  },
  "cli": {
    "analytics": false
  }
}
